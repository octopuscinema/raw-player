name: Release

on:
  push:
    branches: [ "releases/**" ]
  pull_request:
    branches: [ "releases/**" ]

env:
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    timeout-minutes: 10
    
    env:
      SOLUTION_FILE_PATH: Player.Windows.sln
      PROJECT_FILE_PATH: UI/Windows/Player.UI.Windows.csproj
      PUBLISH_PATH: "bin/Release/net6.0-windows/publish/"
      ARTIFACT_PATH: "${{ github.workspace }}\\UI\\Windows\\bin\\Release\\net6.0-windows\\publish\\"
      BUILD_PLATFORM: x64
      BUILD_STANDALONE_ARTIFACT_NAME: "Player-win64-standalone"
      BUILD_INSTALLER_ARTIFACT_NAME: "Player-win64-installer"

    steps:
    - uses: actions/checkout@v3

    - uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild -t:restore ${{env.SOLUTION_FILE_PATH}} -p:PublishReadyToRun=true

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Publish
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /t:publish /p:RuntimeIdentifier=win-x64 /p:PublishDir="${{env.PUBLISH_PATH}}" /p:IncludeNativeLibrariesForSelfExtract=true /p:SelfContained=true /p:PublishSingleFile=true /p:PublishReadyToRun=true /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.PROJECT_FILE_PATH}}
  
    - name: Archive standalone
      uses: TheDoctor0/zip-release@0.6.2
      with:
        directory: ${{ env.ARTIFACT_PATH }}
        path: "*.exe"
        type: 'zip'
        filename: '${{env.BUILD_STANDALONE_ARTIFACT_NAME}}.zip'
  
    - name: Upload standalone artifacts
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ${{env.BUILD_STANDALONE_ARTIFACT_NAME}}
        path: "${{ env.ARTIFACT_PATH }}*.zip"
        if-no-files-found: error

    - name: Upload installer artifacts
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ${{env.BUILD_INSTALLER_ARTIFACT_NAME}}
        path: "${{ env.ARTIFACT_PATH }}*.msi"
        #if-no-files-found: error
