name: CI-macOS

on:
  push:
    branches: [ "dev/ci-macos" ]
  pull_request:
    branches: [ "dev/ci-macos" ]

env:
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  macos:
    name: macOS
    runs-on: macos-latest
    timeout-minutes: 10
    
    env:
      SOLUTION_FILE_PATH: Player.macOS.sln
      DECODER_WORKSPACE_PATH: Decoders/Decoders.macOS.xcworkspace
      BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      DECODER_LJ92_ARCHIVE_PATH: Decoders/LJ92.xcarchive
      DECODER_UNPACK_ARCHIVE_PATH: Decoders/Unpack.xcarchive
      BUILD_STANDALONE_ARTIFACT_NAME: "Player-macOS-standalone"
      STANDALONE_ARTIFACT_PATH: "${{ github.workspace }}/UI/macOS/bin/Release"

    steps:
    - uses: actions/checkout@v3
    
    - name: "Import distribution certificate"
      uses: devbotsxyz/import-signing-certificate@main
      with:
        certificate-data: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        certificate-passphrase: ${{ secrets.P12_PASSWORD }}
        keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
        
    - name: "Build LJ92 decoder native library"
      uses: devbotsxyz/xcode-archive@v1
      with:
        workspace: ${{env.DECODER_WORKSPACE_PATH}}
        scheme: LJ92
        archive-path: ${{env.DECODER_LJ92_ARCHIVE_PATH}}
        
    - name: "Build Unpack decoder native library"
      uses: devbotsxyz/xcode-archive@v1
      with:
        workspace: ${{env.DECODER_WORKSPACE_PATH}}
        scheme: Unpack
        archive-path: ${{env.DECODER_UNPACK_ARCHIVE_PATH}}
    
    - name: List LJ92 build files
      run: ls ${{env.DECODER_LJ92_ARCHIVE_PATH}}
      
    - name: List Unpack build files
      run: ls ${{env.DECODER_UNPACK_ARCHIVE_PATH}}

    - name: Set Xamarin version
      run: |
        $VM_ASSETS/select-xamarin-sdk-v2.sh --mono=6.12 --mac=latest
        
    - name: Restore NuGet packages
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
        
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild ${{env.SOLUTION_FILE_PATH}} /t:Build /p:Configuration=Release /p:CreatePackage=false
      #/p:ArchiveOnBuild=true
      #/p:CreatePackage=true
      
    - name: Upload standalone artifacts
      uses: actions/upload-artifact@v3.1.0
      with:
        name: '${{ env.BUILD_STANDALONE_ARTIFACT_NAME }}'
        path: "${{ env.STANDALONE_ARTIFACT_PATH }}"
        if-no-files-found: error
